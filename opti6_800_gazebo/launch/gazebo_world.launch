<launch>

    <!-- <rosparam file="$(find opti6_800_gazebo)/config/ut_pid_control.yaml" command="load"/> -->
  <arg name="gripper" default="false"/>
  <arg name="vacuum_gripper" default="false"/>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server   opti6_800_robot.urdf.xacro opti6_800.xacro-->
  <param if="$(arg gripper)" name="robot_description" command="$(find xacro)/xacro --inorder '$(find arm_description)/urdf/opti6_800_robot_gripper.urdf.xacro'" /> 
  <param if="$(arg vacuum_gripper)" name="robot_description" command="$(find xacro)/xacro --inorder '$(find arm_description)/urdf/opti6_800_robot_vacuum_gripper.urdf.xacro'" /> 
  
  <param unless="$(eval arg('gripper') or arg('vacuum_gripper'))" name="robot_description" command="$(find xacro)/xacro --inorder '$(find arm_description)/urdf/opti6_800_robot.urdf.xacro'" /> 


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model opti6_800 -param robot_description"/> 


</launch>
