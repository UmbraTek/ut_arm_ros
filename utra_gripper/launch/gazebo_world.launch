<launch>

    <!-- <rosparam file="$(find utra6_550_gazebo)/config/ut_pid_control.yaml" command="load"/> -->
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server   utra6_550_robot.urdf.xacro utra550.xacro-->
  <param  name="robot_description" command="$(find xacro)/xacro --inorder '$(find utra_gripper)/urdf/gripper.xacro'" /> 


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model utra_gripper -param robot_description"/> 

 <!-- Controllers config -->
  <rosparam file="$(find utra_gripper)/config/gripper_controllers.yaml" command="load" />

    <!-- Load controllers -->
  <!-- <node name="robot_controllers" pkg="controller_manager" type="spawner"
        output="screen" args="joint_state_controller gripper_controller"/> -->

  <!-- TF -->
  <!-- <node pkg="robot_state_publisher" type="state_publisher" name="state_publisher">
    <param name="publish_frequency"  type="double" value="50" />
  </node> -->

   
</launch>
